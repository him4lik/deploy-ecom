services:
    traefik:
        image: traefik:v3.0
        ports:
            - "80:80"
            - "443:443"
        command:
            - "--providers.docker=true"
            - "--entrypoints.web.address=:80"
            - "--api.insecure=true" 
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
            - web

    postgres:
        restart: always
        volumes:
            - ../ecommerce_data:/data
        deploy:
            resources:
                limits:
                    memory: 2G
        networks:
            - web

    api:
        ports:
            - "8001:8000"
        volumes:
            - ./api_ecom:/code
        env_file: .env_dev
        deploy:
            resources:
                limits:
                    memory: 3G
        extra_hosts:
            - "localhost:host-gateway" # to be removed in production
        networks:
            - web
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api.rule=PathPrefix(`/api/test1`) || PathPrefix(`/media`)"
            - "traefik.http.routers.api.entrypoints=web"
            - "traefik.http.services.api.loadbalancer.server.port=8000"
        depends_on:
            - postgres
            - redis

    website:
        ports:
            - "8101:8000"
        volumes:    
            - ./web_ecom:/code
        env_file: .env_dev
        deploy:
            resources:
                limits:
                    memory: 3G
        extra_hosts:
            - "localhost:host-gateway" # to be removed in production
        networks:
            - web
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.website.rule=PathPrefix(`/`) && !PathPrefix(`/api/test1`)"
            - "traefik.http.routers.website.entrypoints=web"
            - "traefik.http.services.website.loadbalancer.server.port=8000"
        depends_on:
            - postgres
            - redis

    redis:
        container_name: redis
        ports:
            - "6379:6379"
        restart: always
        volumes:
            - ../redis_data:/data
        networks:
            - web

    beat:
        volumes:
            - ./api_ecom:/code
        env_file: .env_dev
        depends_on:
            - api
            - redis

    worker:
        volumes:
            - ./api_ecom:/code
        env_file: .env_dev
        restart: always
        depends_on:
            - api
            - redis

networks:
    web:
        driver: bridge